Description: Patch flaky regtest
 Test fails on i386 without patch.
 .

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: upstream
Forwarded: https://github.com/DanBloomberg/leptonica/commit/ea2bb8c9cf61d3eba258
Reviewed-By: Jeff Breidenbach <jab@debian.org>
Last-Update: 2021-12-31

--- leptonlib-1.82.0.orig/prog/hash_reg.c	2021-06-11 12:43:40.000000000 -0700
+++ leptonlib-1.82.0/prog/hash_reg.c	2021-12-31 15:15:45.648214667 -0800
@@ -100,7 +100,7 @@
     sarrayIntersectionByAset(sa1, sa2, &sa3);
     c1 = sarrayGetCount(sa3);
     sarrayDestroy(&sa3);
-    regTestCompareValues(rp, string_intersection, c1, 0);  /* 2 */
+    regTestCompareValues(rp, string_intersection, c1, 1);  /* 2 */
     if (rp->display) lept_stderr("  aset: intersection size = %d\n", c1);
     sarrayUnionByAset(sa1, sa2, &sa3);
     c1 = sarrayGetCount(sa3);
@@ -123,7 +123,7 @@
     sarrayIntersectionByHmap(sa1, sa2, &sa3);
     c1 = sarrayGetCount(sa3);
     sarrayDestroy(&sa3);
-    regTestCompareValues(rp, string_intersection, c1, 0);  /* 6 */
+    regTestCompareValues(rp, string_intersection, c1, 1);  /* 6 */
     if (rp->display) lept_stderr("  hmap: intersection size = %d\n", c1);
     sarrayUnionByHmap(sa1, sa2, &sa3);
     c1 = sarrayGetCount(sa3);
@@ -160,7 +160,7 @@
     ptaIntersectionByAset(pta1, pta2, &pta3);
     c1 = ptaGetCount(pta3);
     ptaDestroy(&pta3);
-    regTestCompareValues(rp, pta_intersection, c1, 0);  /* 10 */
+    regTestCompareValues(rp, pta_intersection, c1, 1);  /* 10 */
     if (rp->display) lept_stderr("  aset: intersection size = %d\n", c1);
     ptaUnionByAset(pta1, pta2, &pta3);
     c1 = ptaGetCount(pta3);
@@ -182,7 +182,7 @@
     ptaIntersectionByHmap(pta1, pta2, &pta3);
     c1 = ptaGetCount(pta3);
     ptaDestroy(&pta3);
-    regTestCompareValues(rp, pta_intersection, c1, 0);  /* 14 */
+    regTestCompareValues(rp, pta_intersection, c1, 1);  /* 14 */
     if (rp->display) lept_stderr("  hmap: intersection size = %d\n", c1);
     ptaUnionByHmap(pta1, pta2, &pta3);
     c1 = ptaGetCount(pta3);
@@ -220,7 +220,7 @@
     l_dnaIntersectionByAset(da1, da2, &da3);
     c1 = l_dnaGetCount(da3);
     l_dnaDestroy(&da3);
-    regTestCompareValues(rp, da_intersection, c1, 0);  /* 18 */
+    regTestCompareValues(rp, da_intersection, c1, 1);  /* 18 */
     if (rp->display) lept_stderr("  aset: intersection size = %d\n", c1);
     l_dnaUnionByAset(da1, da2, &da3);
     c1 = l_dnaGetCount(da3);
@@ -242,7 +242,7 @@
     l_dnaIntersectionByHmap(da1, da2, &da3);
     c1 = l_dnaGetCount(da3);
     l_dnaDestroy(&da3);
-    regTestCompareValues(rp, da_intersection, c1, 0);  /* 22 */
+    regTestCompareValues(rp, da_intersection, c1, 1);  /* 22 */
     if (rp->display) lept_stderr("  hmap: intersection size = %d\n", c1);
     l_dnaUnionByHmap(da1, da2, &da3);
     c1 = l_dnaGetCount(da3);
